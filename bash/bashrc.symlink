# =============================================================== #
#
#  PERSONAL $HOME/.bashrc FILE for bash-3.0 (or later)
#  By Liam Hickey <liamhickey@cmail.carleton.ca>
#
#  Last modified: August 8, 2019
#
# =============================================================== #

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# project folder that I can `c [tab]` to
export PROJECTS=/mnt/c/Users/liamhickey/git/godevice

#-------------------------------------------------------------
# Settings
#-------------------------------------------------------------

# Don't close terminal when EOF is read
set -o ignoreeof

# Enable shell options:
shopt -s cdspell
shopt -s cdable_vars
shopt -s checkhash
shopt -s checkwinsize
shopt -s no_empty_cmd_completion
shopt -s histappend histreedit histverify
shopt -s extglob	   # Necessary for programmable completion.
shopt -s globstar

#-------------------------------------------------------------
# SSH
#-------------------------------------------------------------

# Ensure agent is running
ssh-add -l &>/dev/null
if [ "$?" == 2 ]; then
	# Could not open a connection to your authentication agent.

	# Load stored agent connection info.
	test -r ~/.ssh-agent && \
		eval "$(<~/.ssh-agent)" >/dev/null

	ssh-add -l &>/dev/null
	if [ "$?" == 2 ]; then
		rm ~/.ssh-agent
		# Start agent and store agent connection info.
		(umask 066; ssh-agent > ~/.ssh-agent)
		eval "$(<~/.ssh-agent)" >/dev/null
	fi
fi

# Load identities
ssh-add -l &>/dev/null
if [ "$?" == 1 ]; then
	# The agent has no identities.
	# Time to add one.
	ssh-add -t 4h
fi

#-------------------------------------------------------------
# Tailoring 'less'
#-------------------------------------------------------------

alias more='less'
export PAGER=less
export LESSCHARSET='latin1'
export LESS='-i -g -M -R -P%t?f%f \
:stdin .?pb%pb\%:?lbLine %lb:?bbByte %bb:-...'

# LESS man page colors (makes Man pages more readable).
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

#============================================================
#
#  FUNCTIONS
#
#============================================================

#-------------------------------------------------------------
# File & strings related functions:
#-------------------------------------------------------------

# Find a file with a pattern in name:
function ff() { find . -type f -iname '*'"$*"'*' -ls ; }

# Usage: search <string>
# Description: Quick search in a directory for a string ($1).
#
# credit: https://github.com/holman/dotfiles
function search()
{
	set -e
	# use -a to search directories ag usually ignores (like .git)
	# use -i to ignore case
	if [ -x /usr/bin/ag ]; then
		ag -ia "$1"
	elif [ -x /usr/bin/ack ]; then
		ack -i $1
	else
		grep -isrnw '.' -e "$1"
	fi
}

# Usage: extract <file>
# Description: extracts archived files / mounts disk images
#
# credit: http://nparikh.org/notes/zshrc.txt
function extract () 
{
	if [ -f $1 ]; then
		case $1 in
			*.tar.bz2) tar -jxvf $1   ;;
			*.tar.gz)  tar -zxvf $1   ;;
			*.bz2)     bunzip2 $1     ;;
			*.gz)      gunzip $1      ;;
			*.tar)     tar -xvf $1    ;;
			*.tbz2)    tar -jxvf $1   ;;
			*.tgz)     tar -zxvf $1   ;;
			*.zip)     unzip $1       ;;
			*.ZIP)     unzip $1       ;;
			*.rar)     unrar x $1     ;;
			*.Z)       uncompress $1  ;;
			*) echo "'$1' cannot be extracted/mounted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

